/**
* @output FileNameToImport : String
*
*/
 
 importPackage( dw.system );
 importPackage( dw.order );
 importPackage( dw.util );
 importPackage( dw.web );
 importPackage( dw.net );
 importPackage( dw.object );
 importPackage( dw.io );
 
var XML_NAMESPACE : String = "http://www.demandware.com/xml/impex/catalog/2006-10-31";

function execute( pdict : PipelineDictionary ) : Number {

	
	var catalogid : String = "master-ca";

	var newdir : File = new File(File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR + "bannerassign" );
	newdir.mkdirs();
	var importfilename : String = File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR + "bannerassign" + File.SEPARATOR + "bannerassign.xml";
	
	try {

		var folder : dw.io.File = new dw.io.File(dw.io.File.CATALOGS + "/master-ca/default/product_banners");
		
		if (folder.exists() && folder.directory) {
			var list = folder.listFiles();
		}
		var xsw : XMLStreamWriter = initXML(new File(importfilename), catalogid);
		var filesiterator = list.iterator();
		while (filesiterator.hasNext()) {
			
			var file = filesiterator.next()
			 writeProduct(xsw,file.name);

		}

        finalizeFeed(xsw);
    } catch(ex) {
    	var i = ex.toString();
        return PIPELET_NEXT;    
    }
    pdict.FileNameToImport = importfilename.replace(File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR, "");
    return PIPELET_NEXT;
}



function writeProduct(xsw : XMLStreamWriter, filename: String) {

	var filename_noext = filename.substr(0,filename.lastIndexOf('.'));
	var filename_nosuffix = filename_noext.substr(0,filename_noext.lastIndexOf('_banner'));
	var suffix = filename.substr(filename.lastIndexOf('.'));
	var product : dw.catalog.Product = dw.catalog.ProductMgr.getProduct(filename_nosuffix);
	
	if (!empty(product)) {
		xsw.writeStartElement("product");
		xsw.writeAttribute("product-id", product.ID);
		xsw.writeStartElement("custom-attributes");

		xsw.writeStartElement("custom-attribute");
		xsw.writeAttribute("attribute-id", "productBanner");
		xsw.writeCharacters("/product_banners/" + filename);

		xsw.writeEndElement(); //custom-attribute
		xsw.writeEndElement(); //custom-attributes
	    xsw.writeEndElement(); //product
	}
}

/*
* Initializes XML Stream
*/

function initXML(file : File, catalogid: String) : XMLStreamWriter {
    var fw : FileWriter = new FileWriter(file);
    var xsw : XMLIndentingStreamWriter = new XMLIndentingStreamWriter(fw);
    
    
    xsw.writeStartDocument("UTF-8", "1.0");
    xsw.writeStartElement("catalog");
    xsw.writeAttribute("xmlns", XML_NAMESPACE);
    //xsw.writeAttribute("catalog-id", dw.catalog.CatalogMgr.siteCatalog.ID);
    xsw.writeAttribute("catalog-id", catalogid);
    return xsw;
}

/*
* Closes XML and Stream
*/

function finalizeFeed(xsw : XMLStreamWriter) {
    xsw.writeEndElement(); 
    xsw.writeEndDocument();
   
    xsw.flush();
    xsw.close();
}



	